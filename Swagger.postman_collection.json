{
	"info": {
		"_postman_id": "789aee84-bc23-424f-89f5-915272a89cbd",
		"name": "Swagger",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Pet",
			"item": [
				{
					"name": "Add Pet",
					"item": [
						{
							"name": "Verify the status is unavailable",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Verify that an error is shown when valid name and ID is not entered",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Find pet",
					"item": [
						{
							"name": "Finds Pets by status 'Available\"",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pet/findByStatus?status=available,available",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByStatus"
									],
									"query": [
										{
											"key": "status",
											"value": "available,available",
											"description": "(Required) Status values that need to be considered for filter"
										}
									]
								},
								"description": "Multiple status values can be provided with comma separated strings"
							},
							"response": [
								{
									"name": "Invalid status value",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet/findByStatus?status=available,available",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByStatus"
											],
											"query": [
												{
													"key": "status",
													"value": "available,available"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet/findByStatus?status=available,available",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByStatus"
											],
											"query": [
												{
													"key": "status",
													"value": "available,available"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]"
								}
							]
						},
						{
							"name": "Finds Pets by status 'Unavailable'",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pet/findByStatus?status=available,available",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByStatus"
									],
									"query": [
										{
											"key": "status",
											"value": "available,available",
											"description": "(Required) Status values that need to be considered for filter"
										}
									]
								},
								"description": "Multiple status values can be provided with comma separated strings"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet/findByStatus?status=available,available",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByStatus"
											],
											"query": [
												{
													"key": "status",
													"value": "available,available"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]"
								},
								{
									"name": "Invalid status value",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet/findByStatus?status=available,available",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByStatus"
											],
											"query": [
												{
													"key": "status",
													"value": "available,available"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Finds Pets by  invalid status like 'present'",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pet/findByStatus?status=available,available",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByStatus"
									],
									"query": [
										{
											"key": "status",
											"value": "available,available",
											"description": "(Required) Status values that need to be considered for filter"
										}
									]
								},
								"description": "Multiple status values can be provided with comma separated strings"
							},
							"response": [
								{
									"name": "Invalid status value",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet/findByStatus?status=available,available",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByStatus"
											],
											"query": [
												{
													"key": "status",
													"value": "available,available"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet/findByStatus?status=available,available",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByStatus"
											],
											"query": [
												{
													"key": "status",
													"value": "available,available"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete a pet",
					"item": [
						{
							"name": "Not deleted for invalid id",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "api_key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId"
									],
									"variable": [
										{
											"key": "petId",
											"value": "<long>",
											"description": "(Required) Pet id to delete"
										}
									]
								}
							},
							"response": [
								{
									"name": "Pet not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "api_key",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid ID supplied",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "api_key",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Update existing pet",
					"item": [
						{
							"name": "Update an existing pet",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": [
								{
									"name": "Validation exception",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pet not found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid ID supplied",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update and find the pet with invalid name",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": [
								{
									"name": "Pet not found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid ID supplied",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Validation exception",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update and find the pet with invalid id",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": [
								{
									"name": "Validation exception",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pet not found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid ID supplied",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "uploads an image",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "additionalMetadata",
									"value": "<string>",
									"description": "Additional data to pass to server"
								},
								{
									"key": "file",
									"value": "<binary>",
									"description": "file to upload"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/pet/:petId/uploadImage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId",
								"uploadImage"
							],
							"variable": [
								{
									"key": "petId",
									"value": "<long>",
									"description": "(Required) ID of pet to update"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "additionalMetadata",
											"value": "<string>",
											"description": {
												"content": "Additional data to pass to server",
												"type": "text/plain"
											}
										},
										{
											"key": "file",
											"value": "<binary>",
											"description": {
												"content": "file to upload",
												"type": "text/plain"
											}
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/pet/:petId/uploadImage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId",
										"uploadImage"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"type\": \"<string>\",\n \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Purchase order",
			"item": [
				{
					"name": "Add order",
					"item": [
						{
							"name": "Place an order for a pet",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/store/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order"
									]
								}
							},
							"response": [
								{
									"name": "Invalid Order",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/store/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/store/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Error when quantity is not entered",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/store/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/store/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": \"<boolean>\"\n}"
								},
								{
									"name": "Invalid Order",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/store/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Find the order",
					"item": [
						{
							"name": "Find purchase order by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5fc2cc40-25dc-4429-9ecf-2278e0099104",
										"exec": [
											"pm.test(\"Find order by ID\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/store/order/2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order",
										"2"
									]
								},
								"description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"
							},
							"response": [
								{
									"name": "Order not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/store/order/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/store/order/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": \"<boolean>\"\n}"
								},
								{
									"name": "Invalid ID supplied",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/store/order/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns pet inventories by status",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "api_key",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/store/inventory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"inventory"
									]
								},
								"description": "Returns a map of status codes to quantities"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/store/inventory",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"inventory"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete purchase order",
					"item": [
						{
							"name": "Delete purchase order by ID",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/store/order/:orderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order",
										":orderId"
									],
									"variable": [
										{
											"key": "orderId",
											"value": "<long>",
											"description": "(Required) ID of the order that needs to be deleted"
										}
									]
								},
								"description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors"
							},
							"response": [
								{
									"name": "Invalid ID supplied",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/store/order/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/store/order/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "User",
			"item": [
				{
					"name": "user",
					"item": [
						{
							"name": "Create user",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								},
								"description": "This can only be done by the logged in user."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creates list of users with given input array",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/user/createWithArray",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"createWithArray"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/createWithArray",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"createWithArray"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creates list of users with given input array",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/user/createWithList",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"createWithList"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/createWithList",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"createWithList"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Logs user into the system",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/login?username=<string>&password=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"login"
									],
									"query": [
										{
											"key": "username",
											"value": "<string>",
											"description": "(Required) The user name for login"
										},
										{
											"key": "password",
											"value": "<string>",
											"description": "(Required) The password for login in clear text"
										}
									]
								}
							},
							"response": [
								{
									"name": "Invalid username/password supplied",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/login?username=<string>&password=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"login"
											],
											"query": [
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "password",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/login?username=<string>&password=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"login"
											],
											"query": [
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "password",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Expires-After",
											"value": "<dateTime>",
											"description": "date in UTC when token expires"
										},
										{
											"key": "X-Rate-Limit",
											"value": "<integer>",
											"description": "calls per hour allowed by the user"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<string>\""
								}
							]
						},
						{
							"name": "Logs out current logged in user session",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"logout"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"logout"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get user by user name",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "<string>",
									"description": "(Required) The name that needs to be fetched. Use user1 for testing. "
								}
							]
						}
					},
					"response": [
						{
							"name": "User not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}"
						},
						{
							"name": "Invalid username supplied",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Updated user",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "<string>",
									"description": "(Required) name that need to be updated"
								}
							]
						},
						"description": "This can only be done by the logged in user."
					},
					"response": [
						{
							"name": "Invalid user supplied",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User not found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete user",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "<string>",
									"description": "(Required) The name that needs to be deleted"
								}
							]
						},
						"description": "This can only be done by the logged in user."
					},
					"response": [
						{
							"name": "Invalid username supplied",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}